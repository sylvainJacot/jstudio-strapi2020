{"ast":null,"code":"var _jsxFileName = \"/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jcstudio-strapi/jctstudio20-front/src/components/05 Pages/BlogPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ThumbnailBlog from \"../04 Organisms/BlogPage/ThumbnailBlog\";\nimport { media } from \"../01 Atoms/MediaQueries\";\nimport { API_URL } from \"../../config\";\nimport parse from \"html-react-parser\";\nimport { pathblog } from \"../01 Atoms/Data\";\nimport AnimatedLogoJS from \"../01 Atoms/animated-logojs\";\nimport postsAPI from \"../services/postsAPI\";\n\nconst BlogPage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [posts, setPosts] = useState(null);\n  useEffect(() => {\n    fetchAllPosts();\n  }, []);\n\n  const fetchAllPosts = async () => {\n    const data = await postsAPI.findAll();\n    setPosts;\n  }; // var parse = require(\"html-react-parser\");\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BlogPageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(AnimatedLogoJS, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }) : posts.map((item, index) => /*#__PURE__*/React.createElement(ThumbnailBlog, {\n    key: index,\n    thumbnail: item.thumbnail[0].url,\n    title: item.title,\n    descriptionpost: parse(item.Description.substring(0, 208) + \"...\"),\n    slug: pathblog + \"/\" + item.slug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default BlogPage;\nexport const BlogPageContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: white;\n  padding-top: 64px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  ${media.desktop`\n  align-items: center;\n  width: calc(100% - 80px);\n`}\n`;","map":{"version":3,"sources":["/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jcstudio-strapi/jctstudio20-front/src/components/05 Pages/BlogPage.js"],"names":["React","useState","useEffect","styled","ThumbnailBlog","media","API_URL","parse","pathblog","AnimatedLogoJS","postsAPI","BlogPage","isLoading","setIsLoading","posts","setPosts","fetchAllPosts","data","findAll","map","item","index","thumbnail","url","title","Description","substring","slug","BlogPageContainer","div","desktop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,aAAa,GAAG,YAAY;AAChC,UAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,OAAT,EAAnB;AACAH,IAAAA,QAAQ;AACT,GAHD,CARqB,CAarB;;;AAEA,sBACE,uDACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,SAAS,gBACR,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAGRE,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACR,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,SAAS,EAAED,IAAI,CAACE,SAAL,CAAe,CAAf,EAAkBC,GAF/B;AAGE,IAAA,KAAK,EAAEH,IAAI,CAACI,KAHd;AAIE,IAAA,eAAe,EAAEjB,KAAK,CACpBa,IAAI,CAACK,WAAL,CAAiBC,SAAjB,CAA2B,CAA3B,EAA8B,GAA9B,IAAqC,KADjB,CAJxB;AAOE,IAAA,IAAI,EAAElB,QAAQ,GAAG,GAAX,GAAiBY,IAAI,CAACO,IAP9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJJ,CADF,CADF;AAqBD,CApCD;;AAsCA,eAAehB,QAAf;AAEA,OAAO,MAAMiB,iBAAiB,GAAGzB,MAAM,CAAC0B,GAAI;;;;;;;;;IASxCxB,KAAK,CAACyB,OAAQ;;;CAGhB;CAZK","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ThumbnailBlog from \"../04 Organisms/BlogPage/ThumbnailBlog\";\nimport { media } from \"../01 Atoms/MediaQueries\";\nimport { API_URL } from \"../../config\";\nimport parse from \"html-react-parser\";\nimport { pathblog } from \"../01 Atoms/Data\";\nimport AnimatedLogoJS from \"../01 Atoms/animated-logojs\";\nimport postsAPI from \"../services/postsAPI\";\n\nconst BlogPage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [posts, setPosts] = useState(null);\n\n  useEffect(() => {\n    fetchAllPosts();\n  }, []);\n\n  const fetchAllPosts = async () => {\n    const data = await postsAPI.findAll();\n    setPosts\n  }\n\n  // var parse = require(\"html-react-parser\");\n\n  return (\n    <>\n      <BlogPageContainer>\n        {isLoading ? (\n          <AnimatedLogoJS />\n        ) : (\n          posts.map((item, index) => (\n            <ThumbnailBlog\n              key={index}\n              thumbnail={item.thumbnail[0].url}\n              title={item.title}\n              descriptionpost={parse(\n                item.Description.substring(0, 208) + \"...\"\n              )}\n              slug={pathblog + \"/\" + item.slug}\n            />\n          ))\n        )}\n      </BlogPageContainer>\n    </>\n  );\n};\n\nexport default BlogPage;\n\nexport const BlogPageContainer = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: white;\n  padding-top: 64px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  ${media.desktop`\n  align-items: center;\n  width: calc(100% - 80px);\n`}\n`;\n"]},"metadata":{},"sourceType":"module"}