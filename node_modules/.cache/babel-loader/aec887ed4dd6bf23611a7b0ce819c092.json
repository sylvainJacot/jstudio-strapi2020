{"ast":null,"code":"var _jsxFileName = \"/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jcstudio-strapi/jctstudio20-front/src/components/05 Pages/BlogPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ThumbnailBlog from \"../04 Organisms/BlogPage/ThumbnailBlog\";\nimport { fonts } from \"../01 Atoms/globalStyle\";\nimport { media } from \"../01 Atoms/MediaQueries\";\nimport { colors, colorsRoles } from \"../01 Atoms/Colors\";\nimport { API_URL } from \"../../config\";\nimport parse from \"html-react-parser\";\n\nconst BlogPage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [posts, setPosts] = useState(null);\n  useEffect(() => {\n    fetch(API_URL + \"/blog-posts\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"Application/json\"\n      }\n    }).then(res => res.json()).then(response => {\n      setTimeout(() => {\n        setPosts(response);\n        setIsLoading(false);\n      }, 0);\n    });\n  }, []); // const handleContent = (y) => {\n  //   JSON.parse(y);\n  // };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BlogPageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Blog\"), isLoading ? \"Loading...\" : posts.map((item, index) => /*#__PURE__*/React.createElement(ThumbnailBlog, {\n    key: index,\n    Cover: item.cover.url,\n    MainTitlePost: item.MainTitlePost,\n    content: JSON.parse(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }))));\n};\n\nexport default BlogPage;\nexport const BlogPageContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: ${colors.White};\n  padding: 64px 16px 0px 16px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  ${media.desktop`\nwidth: calc(100% - 80px);\n`}\n\n  & h1 {\n    position: relative;\n    ${fonts.PlayFairDisplay};\n    font-size: 4rem;\n    line-height: 48px;\n    color: ${colorsRoles.DarkGrey};\n    ${media.desktop`\n    font-size: 6rem;\n    line-height: 84px;\n    flex-direction: unset;\n    align-items: unset;\n  `}\n  }\n`;","map":{"version":3,"sources":["/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jcstudio-strapi/jctstudio20-front/src/components/05 Pages/BlogPage.js"],"names":["React","useState","useEffect","styled","ThumbnailBlog","fonts","media","colors","colorsRoles","API_URL","parse","BlogPage","isLoading","setIsLoading","posts","setPosts","fetch","method","headers","Accept","then","res","json","response","setTimeout","map","item","index","cover","url","MainTitlePost","JSON","BlogPageContainer","div","White","desktop","PlayFairDisplay","DarkGrey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,KAAT,QAAsB,yBAAtB;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,oBAApC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,KAAK,CAACP,OAAO,GAAG,aAAX,EAA0B;AAC7BQ,MAAAA,MAAM,EAAE,KADqB;AAE7BC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AAFoB,KAA1B,CAAL,CAMGC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANjB,EAOGF,IAPH,CAOSG,QAAD,IAAc;AAClBC,MAAAA,UAAU,CAAC,MAAM;AACfT,QAAAA,QAAQ,CAACQ,QAAD,CAAR;AACAV,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAHS,EAGP,CAHO,CAAV;AAID,KAZH;AAaD,GAdQ,EAcN,EAdM,CAAT,CAJqB,CAoBrB;AACA;AACA;;AAEA,sBACE,uDACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGD,SAAS,GACN,YADM,GAENE,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACR,oBAAC,aAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,KAAK,EAAED,IAAI,CAACE,KAAL,CAAWC,GAFpB;AAGE,IAAA,aAAa,EAAEH,IAAI,CAACI,aAHtB;AAIE,IAAA,OAAO,EAAEC,IAAI,CAACrB,KAAL,EAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALN,CADF,CADF;AAkBD,CA1CD;;AA4CA,eAAeC,QAAf;AAEA,OAAO,MAAMqB,iBAAiB,GAAG7B,MAAM,CAAC8B,GAAI;;;sBAGtB1B,MAAM,CAAC2B,KAAM;;;;;;IAM/B5B,KAAK,CAAC6B,OAAQ;;CAEhB;;;;MAII9B,KAAK,CAAC+B,eAAgB;;;aAGf5B,WAAW,CAAC6B,QAAS;MAC5B/B,KAAK,CAAC6B,OAAQ;;;;;GAKhB;;CAxBG","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport ThumbnailBlog from \"../04 Organisms/BlogPage/ThumbnailBlog\";\nimport { fonts } from \"../01 Atoms/globalStyle\";\nimport { media } from \"../01 Atoms/MediaQueries\";\nimport { colors, colorsRoles } from \"../01 Atoms/Colors\";\nimport { API_URL } from \"../../config\";\nimport parse from \"html-react-parser\";\n\nconst BlogPage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [posts, setPosts] = useState(null);\n\n  useEffect(() => {\n    fetch(API_URL + \"/blog-posts\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"Application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        setTimeout(() => {\n          setPosts(response);\n          setIsLoading(false);\n        }, 0);\n      });\n  }, []);\n\n  // const handleContent = (y) => {\n  //   JSON.parse(y);\n  // };\n\n  return (\n    <>\n      <BlogPageContainer>\n        <h1>Blog</h1>\n\n        {isLoading\n          ? \"Loading...\"\n          : posts.map((item, index) => (\n              <ThumbnailBlog\n                key={index}\n                Cover={item.cover.url}\n                MainTitlePost={item.MainTitlePost}\n                content={JSON.parse()}\n              />\n            ))}\n      </BlogPageContainer>\n    </>\n  );\n};\n\nexport default BlogPage;\n\nexport const BlogPageContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: ${colors.White};\n  padding: 64px 16px 0px 16px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n\n  ${media.desktop`\nwidth: calc(100% - 80px);\n`}\n\n  & h1 {\n    position: relative;\n    ${fonts.PlayFairDisplay};\n    font-size: 4rem;\n    line-height: 48px;\n    color: ${colorsRoles.DarkGrey};\n    ${media.desktop`\n    font-size: 6rem;\n    line-height: 84px;\n    flex-direction: unset;\n    align-items: unset;\n  `}\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}