{"ast":null,"code":"var _jsxFileName = \"/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jcstudio-strapi/jctstudio20-front/src/components/02 Molecules/Button.js\";\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { IcArrow } from \"../01 Atoms/Icons\";\nimport { NavLink } from \"react-router-dom\";\nimport { colorsRoles } from \"../01 Atoms/Colors\";\nimport { media } from \"../01 Atoms/MediaQueries\";\nimport { transitions } from \"../01 Atoms/Animations\";\nexport const StyledLink = styled(NavLink)`\n  position: relative;\n  display: inline-block;\n  width: fit-content;\n  height: fit-content;\n  padding: 16px;\n  margin-top: 8px;\n  margin-bottom: 16px;\n  border-radius: 8px;\n  color: ${colorsRoles.White};\n  background-color: transparent;\n  border: 1px solid ${colorsRoles.White};\n  & div > svg {\n    fill: ${colorsRoles.White};\n  }\n  ${media.desktop`\nmargin-top: 24px;\npadding: 24px;\nmargin-bottom: 0px;\n&:hover {\n        & svg {\n        margin-left: 32px;\n            transition: ${transitions.basic1};\n            -webkit-animation: ${transitions.basic1};\n            -moz-animation: ${transitions.basic1};\n            -o-animation: ${transitions.basic1};\n        }\n    }\n`}\n\n  ${props => {\n  return props.small && css`\n        padding: 8px 16px 8px 16px;\n        ${media.desktop`\n      padding: 8px 16px 8px 16px;\n      `}\n      `;\n}}\n\n${props => {\n  return props.lightmode && css`\n        border-color: ${colorsRoles.DarkGrey};\n        & > div {\n          color: ${colorsRoles.DarkGrey};\n          & > svg {\n            fill: ${colorsRoles.DarkGrey};\n          }\n        }\n      `;\n}}\n`;\nexport const StyledSpan = styled.span`\n  position: relative;\n  display: block;\n  width: fit-content;\n  height: fit-content;\n  padding: 16px;\n  margin-top: 8px;\n  margin-bottom: 16px;\n  border-radius: 8px;\n  color: ${colorsRoles.White};\n  background-color: transparent;\n  border: 1px solid ${colorsRoles.White};\n  z-index: 1;\n  & div > svg {\n    fill: ${colorsRoles.White};\n  }\n  ${media.desktop`\nmargin-top: 24px;\npadding: 24px;\nmargin-bottom: 0px;\n&:hover {\n        & svg {\n        margin-left: 32px;\n        transition: ${transitions.basic1};\n        -webkit-animation: ${transitions.basic1};\n        -moz-animation: ${transitions.basic1};\n        -o-animation: ${transitions.basic1};\n        }\n    }\n`}\n\n  ${props => {\n  return props.small && css`\n        padding: 8px 16px 8px 16px;\n        ${media.desktop`\n      padding: 8px 16px 8px 16px;\n      `}\n      `;\n}}\n\n${props => {\n  return props.lightmode && css`\n        border-color: ${colorsRoles.DarkGrey};\n        & > div {\n          color: ${colorsRoles.DarkGrey};\n          & > svg {\n            fill: ${colorsRoles.DarkGrey};\n          }\n        }\n      `;\n}}\n`;\nexport const Content = styled.div`\ndisplay: flex;\nalign-items: center;\ncolor: ${colorsRoles.White};\nfont-family: Roboto;\nfont-size: 2rem;\n\n& svg {\nmargin-left: 16px;\n}\n`;\n\nconst Button = ({\n  pathname,\n  label,\n  small,\n  lightmode,\n  isspan\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isspan ? /*#__PURE__*/React.createElement(StyledSpan, {\n    small: small,\n    lightmode: lightmode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, label ? label : \"Default\", /*#__PURE__*/React.createElement(IcArrow, {\n    IconSize: \"24px\",\n    SizeBis: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }))) : /*#__PURE__*/React.createElement(StyledLink, {\n    to: pathname,\n    small: small,\n    lightmode: lightmode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, label ? label : \"Default\", /*#__PURE__*/React.createElement(IcArrow, {\n    IconSize: \"24px\",\n    SizeBis: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jcstudio-strapi/jctstudio20-front/src/components/02 Molecules/Button.js"],"names":["React","styled","css","IcArrow","NavLink","colorsRoles","media","transitions","StyledLink","White","desktop","basic1","props","small","lightmode","DarkGrey","StyledSpan","span","Content","div","Button","pathname","label","isspan"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { IcArrow } from \"../01 Atoms/Icons\";\nimport { NavLink } from \"react-router-dom\";\nimport { colorsRoles } from \"../01 Atoms/Colors\";\nimport { media } from \"../01 Atoms/MediaQueries\";\nimport { transitions } from \"../01 Atoms/Animations\";\n\nexport const StyledLink = styled(NavLink)`\n  position: relative;\n  display: inline-block;\n  width: fit-content;\n  height: fit-content;\n  padding: 16px;\n  margin-top: 8px;\n  margin-bottom: 16px;\n  border-radius: 8px;\n  color: ${colorsRoles.White};\n  background-color: transparent;\n  border: 1px solid ${colorsRoles.White};\n  & div > svg {\n    fill: ${colorsRoles.White};\n  }\n  ${media.desktop`\nmargin-top: 24px;\npadding: 24px;\nmargin-bottom: 0px;\n&:hover {\n        & svg {\n        margin-left: 32px;\n            transition: ${transitions.basic1};\n            -webkit-animation: ${transitions.basic1};\n            -moz-animation: ${transitions.basic1};\n            -o-animation: ${transitions.basic1};\n        }\n    }\n`}\n\n  ${(props) => {\n    return (\n      props.small &&\n      css`\n        padding: 8px 16px 8px 16px;\n        ${media.desktop`\n      padding: 8px 16px 8px 16px;\n      `}\n      `\n    );\n  }}\n\n${(props) => {\n    return (\n      props.lightmode &&\n      css`\n        border-color: ${colorsRoles.DarkGrey};\n        & > div {\n          color: ${colorsRoles.DarkGrey};\n          & > svg {\n            fill: ${colorsRoles.DarkGrey};\n          }\n        }\n      `\n    );\n  }}\n`;\nexport const StyledSpan = styled.span`\n  position: relative;\n  display: block;\n  width: fit-content;\n  height: fit-content;\n  padding: 16px;\n  margin-top: 8px;\n  margin-bottom: 16px;\n  border-radius: 8px;\n  color: ${colorsRoles.White};\n  background-color: transparent;\n  border: 1px solid ${colorsRoles.White};\n  z-index: 1;\n  & div > svg {\n    fill: ${colorsRoles.White};\n  }\n  ${media.desktop`\nmargin-top: 24px;\npadding: 24px;\nmargin-bottom: 0px;\n&:hover {\n        & svg {\n        margin-left: 32px;\n        transition: ${transitions.basic1};\n        -webkit-animation: ${transitions.basic1};\n        -moz-animation: ${transitions.basic1};\n        -o-animation: ${transitions.basic1};\n        }\n    }\n`}\n\n  ${(props) => {\n    return (\n      props.small &&\n      css`\n        padding: 8px 16px 8px 16px;\n        ${media.desktop`\n      padding: 8px 16px 8px 16px;\n      `}\n      `\n    );\n  }}\n\n${(props) => {\n    return (\n      props.lightmode &&\n      css`\n        border-color: ${colorsRoles.DarkGrey};\n        & > div {\n          color: ${colorsRoles.DarkGrey};\n          & > svg {\n            fill: ${colorsRoles.DarkGrey};\n          }\n        }\n      `\n    );\n  }}\n`;\n\nexport const Content = styled.div`\ndisplay: flex;\nalign-items: center;\ncolor: ${colorsRoles.White};\nfont-family: Roboto;\nfont-size: 2rem;\n\n& svg {\nmargin-left: 16px;\n}\n`\n\n\nconst Button = ({ pathname, label, small, lightmode, isspan }) => {\n  return (\n    <>\n      {isspan ? (\n        <StyledSpan small={small} lightmode={lightmode}>\n          <Content>\n            {label ? label : \"Default\"}\n            <IcArrow IconSize={\"24px\"} SizeBis={\"100%\"} />\n          </Content>\n        </StyledSpan>\n      ) : (\n        <StyledLink to={pathname} small={small} lightmode={lightmode}>\n          <Content>\n            {label ? label : \"Default\"}\n            <IcArrow IconSize={\"24px\"} SizeBis={\"100%\"} />\n          </Content>\n        </StyledLink>\n      )}\n    </>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}