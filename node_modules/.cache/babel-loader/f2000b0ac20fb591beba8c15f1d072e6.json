{"ast":null,"code":"var _jsxFileName = \"/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jcstudio-strapi/jctstudio20-front/src/components/05 Pages/BlogPosts/BlogPostItem.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fonts } from \"../../01 Atoms/globalStyle\";\nimport { colorsRoles } from \"../../01 Atoms/Colors\";\nimport { media } from \"../../01 Atoms/MediaQueries\";\nimport { API_URL } from \"../../../config\";\nimport parse from \"html-react-parser\";\n\nconst BlogPostItem = () => {\n  const {\n    id\n  } = useParams();\n  let [post, setPost] = useState(null);\n  let [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    fetch(`${API_URL}/posts/${id}`).then(res => res.json()).then(res => {\n      setTimeout(() => {\n        setPost(res);\n        setIsLoading(true);\n      }, 1000);\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading ? /*#__PURE__*/React.createElement(PostItemContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, post.title), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, parsepost.content)) : \"Loading...\");\n};\n\nexport default BlogPostItem;\nexport const Title = styled.h1`\n    position: relative;\n    ${fonts.PlayFairDisplay};\n    font-size: 4rem;\n    line-height: 4rem;\n    color: ${colorsRoles.DarkGrey};\n    width: 64%;\n    padding-top: 120px;\n\n    ${media.tablet`\n    font-size: 6rem;\n    line-height: 6rem;\n    `}\n`;\nexport const Content = styled.div`\n\n`;\nexport const PostItemContainer = styled.div`\n      background-color: ${colorsRoles.White};\n`;","map":{"version":3,"sources":["/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jcstudio-strapi/jctstudio20-front/src/components/05 Pages/BlogPosts/BlogPostItem.js"],"names":["React","useState","useEffect","useParams","styled","fonts","colorsRoles","media","API_URL","parse","BlogPostItem","id","post","setPost","isLoading","setIsLoading","fetch","then","res","json","setTimeout","title","parsepost","content","Title","h1","PlayFairDisplay","DarkGrey","tablet","Content","div","PostItemContainer","White"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,KAAT,QAAsB,6BAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAASR,SAAS,EAAxB;AACA,MAAI,CAACS,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAA9B;AACA,MAAI,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,KAAK,CAAE,GAAER,OAAQ,UAASG,EAAG,EAAxB,CAAL,CACGM,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACbE,MAAAA,UAAU,CAAC,MAAM;AACfP,QAAAA,OAAO,CAACK,GAAD,CAAP;AACAH,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAHS,EAGP,IAHO,CAAV;AAID,KAPH;AAQD,GATQ,CAAT;AAWA,sBACE,0CACGD,SAAS,gBACR,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQF,IAAI,CAACS,KAAb,CADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCC,SAAS,CAACC,OADX,CAFF,CADQ,GAQR,YATJ,CADF;AAcD,CA9BD;;AAgCA,eAAeb,YAAf;AAEA,OAAO,MAAMc,KAAK,GAAGpB,MAAM,CAACqB,EAAG;;MAEzBpB,KAAK,CAACqB,eAAgB;;;aAGfpB,WAAW,CAACqB,QAAS;;;;MAI5BpB,KAAK,CAACqB,MAAO;;;KAGb;CAZC;AAeP,OAAO,MAAMC,OAAO,GAAGzB,MAAM,CAAC0B,GAAI;;CAA3B;AAIP,OAAO,MAAMC,iBAAiB,GAAG3B,MAAM,CAAC0B,GAAI;0BAClBxB,WAAW,CAAC0B,KAAM;CADrC","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fonts } from \"../../01 Atoms/globalStyle\";\nimport { colorsRoles } from \"../../01 Atoms/Colors\";\nimport { media } from \"../../01 Atoms/MediaQueries\";\nimport { API_URL } from \"../../../config\";\nimport parse from \"html-react-parser\";\n\nconst BlogPostItem = () => {\n  const { id } = useParams();\n  let [post, setPost] = useState(null);\n  let [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetch(`${API_URL}/posts/${id}`)\n      .then((res) => res.json())\n      .then((res) => {\n        setTimeout(() => {\n          setPost(res);\n          setIsLoading(true);\n        }, 1000);\n      });\n  });\n\n  return (\n    <>\n      {isLoading ? (\n        <PostItemContainer>\n          <Title>{post.title}</Title>\n          <Content>\n          {parsepost.content}\n          </Content>\n        </PostItemContainer>\n      ) : (\n        \"Loading...\"\n      )}\n    </>\n  );\n};\n\nexport default BlogPostItem;\n\nexport const Title = styled.h1`\n    position: relative;\n    ${fonts.PlayFairDisplay};\n    font-size: 4rem;\n    line-height: 4rem;\n    color: ${colorsRoles.DarkGrey};\n    width: 64%;\n    padding-top: 120px;\n\n    ${media.tablet`\n    font-size: 6rem;\n    line-height: 6rem;\n    `}\n`;\n\nexport const Content = styled.div`\n\n`;\n\nexport const PostItemContainer = styled.div`\n      background-color: ${colorsRoles.White};\n`;"]},"metadata":{},"sourceType":"module"}