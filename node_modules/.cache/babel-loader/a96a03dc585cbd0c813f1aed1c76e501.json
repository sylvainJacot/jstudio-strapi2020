{"ast":null,"code":"var _jsxFileName = \"/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jcstudio-strapi/jctstudio20-front/src/components/04 Organisms/NavDeveloperProjects/CodeSandboxes/CodeSandboxes.js\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { colorsRoles } from \"../../../01 Atoms/Colors\";\nimport CodeSandBoxItem from \"./CodeSandBoxItem\";\nimport { fonts } from \"../../../01 Atoms/globalStyle\";\nimport CodeSandBox from \"../../../../media/icons/methodology/code-sandbox.svg\";\nimport { API_URL } from \"../../../../config\";\nimport { media } from \"../../../01 Atoms/MediaQueries\";\n\nconst CodeSandboxes = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [codesandboxes, setCodesandboxes] = useState(null);\n  useEffect(() => {\n    fetch(API_URL + \"/codesandboxes\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"Application/json\"\n      }\n    }).then(res => res.json()).then(response => {\n      setTimeout(() => {\n        setCodesandboxes(response);\n        setIsLoading(false);\n      }, 0);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"CodeSanbox Section\"), /*#__PURE__*/React.createElement(CodeSandoxItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, isLoading ? \"Loading ...\" : codesandboxes.map((item, index) => /*#__PURE__*/React.createElement(CodeSandBoxItem, {\n    key: index,\n    href: item.link,\n    src: item.thumbnail.url,\n    alt: item.alt,\n    label: item.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default CodeSandboxes;\nexport const Wrapper = styled.div`\n  background-color: ${colorsRoles.LightGrey2};\n  text-align: center;\n  padding: 80px 0px;\n\n  & h2 {\n    width: 50%;\n    position: relative;\n    display: inline-block;\n    ${fonts.RobotoBold};\n    font-weight: 800;\n    font-size: 5rem;\n    text-align: center;\n    padding: 40px 0;\n    line-height: 1.3;\n    ${media.tablet`\n    width: unset;\n    `};\n\n    &::before {\n      position: absolute;\n      content: \"\";\n      display: block;\n      width: 40px;\n      height: 40px;\n      background-image: url(${CodeSandBox});\n      background-size: contain;\n      background-repeat: no-repeat;\n      left: -56px;\n    }\n  }\n`;\nexport const CodeSandoxItems = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;","map":{"version":3,"sources":["/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jcstudio-strapi/jctstudio20-front/src/components/04 Organisms/NavDeveloperProjects/CodeSandboxes/CodeSandboxes.js"],"names":["React","useEffect","useState","styled","colorsRoles","CodeSandBoxItem","fonts","API_URL","media","CodeSandboxes","isLoading","setIsLoading","codesandboxes","setCodesandboxes","fetch","method","headers","Accept","then","res","json","response","setTimeout","map","item","index","link","thumbnail","url","alt","label","Wrapper","div","LightGrey2","RobotoBold","tablet","CodeSandBox","CodeSandoxItems"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,+BAAtB;;AAEA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,KAAT,QAAsB,gCAAtB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,IAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAACP,OAAO,GAAG,gBAAX,EAA6B;AAChCQ,MAAAA,MAAM,EAAE,KADwB;AAEhCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD;AAFuB,KAA7B,CAAL,CAMGC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANjB,EAOGF,IAPH,CAOSG,QAAD,IAAc;AAClBC,MAAAA,UAAU,CAAC,MAAM;AACfT,QAAAA,gBAAgB,CAACQ,QAAD,CAAhB;AACAV,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAHS,EAGP,CAHO,CAAV;AAID,KAZH;AAaD,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACE,uDACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,SAAS,GACN,aADM,GAENE,aAAa,CAACW,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,kBAChB,oBAAC,eAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,IAAI,EAAED,IAAI,CAACE,IAFb;AAGE,IAAA,GAAG,EAAEF,IAAI,CAACG,SAAL,CAAeC,GAHtB;AAKE,IAAA,GAAG,EAAEJ,IAAI,CAACK,GALZ;AAME,IAAA,KAAK,EAAEL,IAAI,CAACM,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHN,CAFF,CADF,CADF;AAqBD,CAzCD;;AA2CA,eAAerB,aAAf;AAEA,OAAO,MAAMsB,OAAO,GAAG5B,MAAM,CAAC6B,GAAI;sBACZ5B,WAAW,CAAC6B,UAAW;;;;;;;;MAQvC3B,KAAK,CAAC4B,UAAW;;;;;;MAMjB1B,KAAK,CAAC2B,MAAO;;KAEb;;;;;;;;8BAQwBC,WAAY;;;;;;CAzBnC;AAiCP,OAAO,MAAMC,eAAe,GAAGlC,MAAM,CAAC6B,GAAI;;;;CAAnC","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { colorsRoles } from \"../../../01 Atoms/Colors\";\nimport CodeSandBoxItem from \"./CodeSandBoxItem\";\nimport { fonts } from \"../../../01 Atoms/globalStyle\";\nimport CodeSandBox from \"../../../../media/icons/methodology/code-sandbox.svg\";\nimport { API_URL } from \"../../../../config\";\nimport { media } from \"../../../01 Atoms/MediaQueries\";\n\nconst CodeSandboxes = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [codesandboxes, setCodesandboxes] = useState(null);\n\n  useEffect(() => {\n    fetch(API_URL + \"/codesandboxes\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"Application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        setTimeout(() => {\n          setCodesandboxes(response);\n          setIsLoading(false);\n        }, 0);\n      });\n  }, []);\n\n  return (\n    <>\n      <Wrapper>\n        <h2>CodeSanbox Section</h2>\n        <CodeSandoxItems>\n          {isLoading\n            ? \"Loading ...\"\n            : codesandboxes.map((item, index) => (\n                <CodeSandBoxItem\n                  key={index}\n                  href={item.link}\n                  src={item.thumbnail.url\n                  }\n                  alt={item.alt}\n                  label={item.label}\n                />\n              ))}\n        </CodeSandoxItems>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default CodeSandboxes;\n\nexport const Wrapper = styled.div`\n  background-color: ${colorsRoles.LightGrey2};\n  text-align: center;\n  padding: 80px 0px;\n\n  & h2 {\n    width: 50%;\n    position: relative;\n    display: inline-block;\n    ${fonts.RobotoBold};\n    font-weight: 800;\n    font-size: 5rem;\n    text-align: center;\n    padding: 40px 0;\n    line-height: 1.3;\n    ${media.tablet`\n    width: unset;\n    `};\n\n    &::before {\n      position: absolute;\n      content: \"\";\n      display: block;\n      width: 40px;\n      height: 40px;\n      background-image: url(${CodeSandBox});\n      background-size: contain;\n      background-repeat: no-repeat;\n      left: -56px;\n    }\n  }\n`;\n\nexport const CodeSandoxItems = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n"]},"metadata":{},"sourceType":"module"}