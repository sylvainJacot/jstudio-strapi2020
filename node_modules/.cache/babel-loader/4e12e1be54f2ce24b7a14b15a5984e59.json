{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jcstudio-strapi/jctstudio20-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jcstudio-strapi/jctstudio20-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  flex-wrap: wrap;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    width: unset;\\n    \"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  text-align: center;\\n  padding: 80px 0px;\\n\\n  & h2 {\\n    width: 50%;\\n    position: relative;\\n    display: inline-block;\\n    \",\";\\n    font-weight: 800;\\n    font-size: 5rem;\\n    text-align: center;\\n    padding: 40px 0;\\n    line-height: 1.3;\\n    \",\";\\n\\n    &::before {\\n      position: absolute;\\n      content: \\\"\\\";\\n      display: block;\\n      width: 40px;\\n      height: 40px;\\n      background-image: url(\",\");\\n      background-size: contain;\\n      background-repeat: no-repeat;\\n      left: -56px;\\n    }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect,useState}from\"react\";import styled from\"styled-components\";import{colorsRoles}from\"../../../01 Atoms/Colors\";import CodeSandBoxItem from\"./CodeSandBoxItem\";import{fonts}from\"../../../01 Atoms/globalStyle\";import CodeSandBox from\"../../../../media/icons/methodology/code-sandbox.svg\";import{API_URL}from\"../../../../config\";import{media}from\"../../../01 Atoms/MediaQueries\";var CodeSandboxes=function CodeSandboxes(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),codesandboxes=_useState4[0],setCodesandboxes=_useState4[1];useEffect(function(){fetch(API_URL+\"/codesandboxes\",{method:\"GET\",headers:{Accept:\"Application/json\"}}).then(function(res){return res.json();}).then(function(response){setTimeout(function(){setCodesandboxes(response);setIsLoading(false);},3000);});},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Wrapper,null,/*#__PURE__*/React.createElement(\"h2\",null,\"CodeSanbox Section\"),/*#__PURE__*/React.createElement(CodeSandoxItems,null,isLoading?\"Loading ...\":codesandboxes.map(function(item,index){return/*#__PURE__*/React.createElement(CodeSandBoxItem,{key:index,href:item.link,src:item.thumbnail.url,alt:item.alt,label:item.label});}))));};export default CodeSandboxes;export var Wrapper=styled.div(_templateObject(),colorsRoles.LightGrey2,fonts.RobotoBold,media.tablet(_templateObject2()),CodeSandBox);export var CodeSandoxItems=styled.div(_templateObject3());","map":{"version":3,"sources":["/Users/sylv/Desktop/Work/Jacot Studio/WEBSITE/WEB/Jacot Studio 2020/02_Web/jcstudio-strapi/jctstudio20-front/src/components/04 Organisms/NavDeveloperProjects/CodeSandboxes/CodeSandboxes.js"],"names":["React","useEffect","useState","styled","colorsRoles","CodeSandBoxItem","fonts","API_URL","media","CodeSandboxes","isLoading","setIsLoading","codesandboxes","setCodesandboxes","fetch","method","headers","Accept","then","res","json","response","setTimeout","map","item","index","link","thumbnail","url","alt","label","Wrapper","div","LightGrey2","RobotoBold","tablet","CodeSandBox","CodeSandoxItems"],"mappings":"6/CAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,WAAT,KAA4B,0BAA5B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,OAASC,KAAT,KAAsB,+BAAtB,C,8EAEA,OAASC,OAAT,KAAwB,oBAAxB,CACA,OAASC,KAAT,KAAsB,gCAAtB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,eACQP,QAAQ,CAAC,IAAD,CADhB,wCACnBQ,SADmB,eACRC,YADQ,8BAEgBT,QAAQ,CAAC,IAAD,CAFxB,yCAEnBU,aAFmB,eAEJC,gBAFI,eAI1BZ,SAAS,CAAC,UAAM,CACda,KAAK,CAACP,OAAO,CAAG,gBAAX,CAA6B,CAChCQ,MAAM,CAAE,KADwB,CAEhCC,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAFuB,CAA7B,CAAL,CAMGC,IANH,CAMQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EANR,EAOGF,IAPH,CAOQ,SAACG,QAAD,CAAc,CAClBC,UAAU,CAAC,UAAM,CACfT,gBAAgB,CAACQ,QAAD,CAAhB,CACAV,YAAY,CAAC,KAAD,CAAZ,CACD,CAHS,CAGP,IAHO,CAAV,CAID,CAZH,EAaD,CAdQ,CAcN,EAdM,CAAT,CAgBA,mBACE,qDACE,oBAAC,OAAD,mBACE,mDADF,cAEE,oBAAC,eAAD,MACGD,SAAS,CACN,aADM,CAENE,aAAa,CAACW,GAAd,CAAkB,SAACC,IAAD,CAAOC,KAAP,qBAChB,oBAAC,eAAD,EACE,GAAG,CAAEA,KADP,CAEE,IAAI,CAAED,IAAI,CAACE,IAFb,CAGE,GAAG,CAAEF,IAAI,CAACG,SAAL,CAAeC,GAHtB,CAIE,GAAG,CAAEJ,IAAI,CAACK,GAJZ,CAKE,KAAK,CAAEL,IAAI,CAACM,KALd,EADgB,EAAlB,CAHN,CAFF,CADF,CADF,CAoBD,CAxCD,CA0CA,cAAerB,CAAAA,aAAf,CAEA,MAAO,IAAMsB,CAAAA,OAAO,CAAG5B,MAAM,CAAC6B,GAAV,mBACE5B,WAAW,CAAC6B,UADd,CASd3B,KAAK,CAAC4B,UATQ,CAed1B,KAAK,CAAC2B,MAfQ,qBAyBUC,WAzBV,CAAb,CAiCP,MAAO,IAAMC,CAAAA,eAAe,CAAGlC,MAAM,CAAC6B,GAAV,oBAArB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { colorsRoles } from \"../../../01 Atoms/Colors\";\nimport CodeSandBoxItem from \"./CodeSandBoxItem\";\nimport { fonts } from \"../../../01 Atoms/globalStyle\";\nimport CodeSandBox from \"../../../../media/icons/methodology/code-sandbox.svg\";\nimport { API_URL } from \"../../../../config\";\nimport { media } from \"../../../01 Atoms/MediaQueries\";\n\nconst CodeSandboxes = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [codesandboxes, setCodesandboxes] = useState(null);\n\n  useEffect(() => {\n    fetch(API_URL + \"/codesandboxes\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"Application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        setTimeout(() => {\n          setCodesandboxes(response);\n          setIsLoading(false);\n        }, 3000);\n      });\n  }, []);\n\n  return (\n    <>\n      <Wrapper>\n        <h2>CodeSanbox Section</h2>\n        <CodeSandoxItems>\n          {isLoading\n            ? \"Loading ...\"\n            : codesandboxes.map((item, index) => (\n                <CodeSandBoxItem\n                  key={index}\n                  href={item.link}\n                  src={item.thumbnail.url}\n                  alt={item.alt}\n                  label={item.label}\n                />\n              ))}\n        </CodeSandoxItems>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default CodeSandboxes;\n\nexport const Wrapper = styled.div`\n  background-color: ${colorsRoles.LightGrey2};\n  text-align: center;\n  padding: 80px 0px;\n\n  & h2 {\n    width: 50%;\n    position: relative;\n    display: inline-block;\n    ${fonts.RobotoBold};\n    font-weight: 800;\n    font-size: 5rem;\n    text-align: center;\n    padding: 40px 0;\n    line-height: 1.3;\n    ${media.tablet`\n    width: unset;\n    `};\n\n    &::before {\n      position: absolute;\n      content: \"\";\n      display: block;\n      width: 40px;\n      height: 40px;\n      background-image: url(${CodeSandBox});\n      background-size: contain;\n      background-repeat: no-repeat;\n      left: -56px;\n    }\n  }\n`;\n\nexport const CodeSandoxItems = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n"]},"metadata":{},"sourceType":"module"}